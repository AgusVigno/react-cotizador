{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","actualizarCargando","useState","marca","year","plan","datos","guardarDatos","error","actualizarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","parseFloat","calcularPlan","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d2229111.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst ContenedorHeader = styled.header`\n    background-color: #26C6DA;\n    padding: 10px;\n    font-weight: bold;\n    color: #FFFFFF;\n`;\n\nconst TextoHeader = styled.h1`\n    font-size: 2rem;\n    margin: 0;\n    font-family: 'Slabo 27px', serif;\n    text-align: center;\n`;\n\n\nconst Header = ({titulo}) => {\n    return (\n        <ContenedorHeader>\n            <TextoHeader>{titulo}</TextoHeader>\n        </ContenedorHeader> \n    );\n}\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired,\n}\n\nexport default Header;","//obtiene la diferencia de años\nexport function obtenerDiferenciaYear(year){\n    return new Date().getFullYear() - year;\n}\n\n//calcula la diferencia a pagar segun la marca\nexport function calcularMarca(marca){\n    let incremento\n\n    switch (marca) {\n        case 'europeo':\n            incremento = 1.3;\n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            break;\n        default:\n            break;\n    }\n    return incremento;\n}\n\n//calcular segun el plan\nexport function calcularPlan(plan){\n    return plan === 'basico' ? 1.2 : 1.5;\n}\n\n//transforma la primer letra del texto en mayuscula\nexport function primerMayuscula(texto){\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { obtenerDiferenciaYear, calcularMarca, calcularPlan } from '../helper';\n\nconst Campo = styled.div`\n    display: flex;\n    margin-bottom: 1rem;\n    align-items: center;\n`;\n\nconst Label = styled.label`\n    flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n    display: block;\n    width: 100%;\n    padding: 1rem;\n    border: 1px solid #e1e1e1;\n    -webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n    margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n    background-color: #00838F;\n    font-size: 16px;\n    border: none;\n    padding: 1rem;\n    width: 100%;\n    color: #ffffff;\n    text-transform: uppercase;\n    font-weight: bold;\n    transition: background-color .3s easy;\n    margin-top: 2rem;\n\n    &:hover{\n        cursor: pointer;\n        background-color: #26C6DA;\n    }\n`;\n\nconst Error = styled.div`\n    background-color: red;\n    padding: 1rem;\n    color: white;\n    text-align: center;\n    width: 100%;\n    margin-bottom: 2rem;\n`;\n\nconst Formulario = ({guardarResumen, actualizarCargando}) => {\n\n    //definir el UseState\n    const [ datos, guardarDatos ] = useState({\n        marca: '',\n        year: '',\n        plan: ''\n    });\n\n    const [ error, actualizarError ] = useState(false);\n\n    //extraer los valore del state\n    const { marca, year, plan } = datos;\n\n    //leer los valores del formulario y guardarlos en el State\n    const obtenerInformacion = e => {\n        guardarDatos({ ...datos, [e.target.name] : e.target.value })\n    } \n\n    //cuando el usuario hace click en cotizar\n    const cotizarSeguro = e => {\n        e.preventDefault();\n\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\n            actualizarError(true);\n            return\n        }\n        actualizarError(false);\n\n        //base de 2000\n        let resultado = 2000;\n\n        //obtener la diferencia de años\n        const diferencia = obtenerDiferenciaYear(year);\n\n        //por cada año se le resta 3%\n        resultado -= ((diferencia * 3) * resultado ) / 100;\n\n        //americano 15% - europeo 30% - asiatico 5%\n        resultado = calcularMarca(marca) * resultado;\n\n        \n        //basico aumenta 20% - completo 50%\n        resultado = parseFloat(calcularPlan(plan) * resultado).toFixed(2);\n        \n        //agrega el spinner\n        actualizarCargando(true);\n\n        setTimeout(() => {\n            //elimina el spinner\n            actualizarCargando(false)\n\n            //pasa la informacion al componente principal\n            guardarResumen({\n                cotizacion: Number(resultado),\n                datos\n            });\n        }, 3000);\n    }\n\n\n    return ( \n        <form\n            onSubmit={cotizarSeguro}\n        >\n            { error ? <Error>Todos los campos son obligatorios</Error> : null }\n\n            <Campo>\n                <Label>Marca</Label>\n                <Select\n                    name=\"marca\"\n                    value={marca}\n                    onChange={obtenerInformacion}\n                >\n                    <option value=\"\">--Seleccione--</option>\n                    <option value=\"americano\">Americano</option>\n                    <option value=\"europeo\">Europeo</option>\n                    <option value=\"asiatico\">Asiático</option>\n                </Select>\n            </Campo>\n            <Campo>\n                <Label>Año</Label>\n                <Select\n                    name=\"year\"\n                    value={year}\n                    onChange={obtenerInformacion}\n                >\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                </Select>\n            </Campo>\n            <Campo>\n                <Label>Plan</Label>\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"basico\"\n                    checked={plan === 'basico'}\n                    onChange={obtenerInformacion}\n                />Basico\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"completo\"\n                    checked={plan === 'completo'}\n                    onChange={obtenerInformacion}\n                />Completo\n            </Campo>\n            <Boton type=\"submit\">Cotizar</Boton>\n        </form>\n    );\n}\n \nFormulario.propTypes = {\n    guardarResumen: PropTypes.func.isRequired,\n    actualizarCargando: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { primerMayuscula } from '../helper';\n\nconst ContenedorResumen = styled.div`\n    padding: 1rem;\n    text-align: center;\n    background-color: #00838F;\n    color: #ffffff;\n    margin-top: 1rem;\n`;\n\nconst Resumen = ({datos}) => {\n\n    const {marca, year, plan} = datos;\n\n    if( marca === '' || year === '' || plan === '') return null;\n\n    return ( \n        <ContenedorResumen>\n            <h2>Resumen de Cotización</h2>\n            <ul>\n                <li>Marca: {primerMayuscula(marca)}</li>\n                <li>Plan: {primerMayuscula(plan)}</li>\n                <li>Año del auto: {year}</li>\n            </ul>\n        </ContenedorResumen>\n    );\n}\n\nResumen.propTypes = {\n    datos: PropTypes.object.isRequired,\n}\n \nexport default Resumen;","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst Mensaje = styled.p`\n    background-color: rgb(127, 224, 237);\n    padding: 1rem;\n    margin-top: 2rem;\n    text-align: center;\n`;\n\nconst ResultadoCotizacion = styled.div`\n    text-align: center;\n    padding: .5rem;\n    border: 1px solid #26C6DA;\n    background-color: rgb(127, 224, 237);\n    margin-top: 1rem;\n    position: relative;\n`;\n\nconst TextoCotizacion = styled.p`\n    color: #00838F;\n    padding: 1rem;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin: 0;\n`;\n\nconst Resultado = ({cotizacion}) => {\n\n    return ( \n        (cotizacion === 0) \n        ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje> \n        : (\n            <ResultadoCotizacion>\n                <TransitionGroup\n                    component=\"span\"\n                    className=\"resultado\"\n                >\n                    <CSSTransition\n                        classNames=\"resultado\"\n                        key={cotizacion}\n                        timeout={{enter: 500, exit:500}}\n                    >\n                        <TextoCotizacion>El total es: $ <span>{cotizacion}</span></TextoCotizacion>\n                    </CSSTransition>\n                </TransitionGroup>\n            </ResultadoCotizacion>\n        ) \n    );\n}\n\nResultado.propTypes = {\n    cotizacion: PropTypes.number.isRequired\n}\n\nexport default Resultado;","import React from 'react';\nimport './Spinner.css'\n\nconst Spinner = () => {\n    return ( \n        <div className=\"sk-circle\">\n            <div className=\"sk-circle1 sk-child\"></div>\n            <div className=\"sk-circle2 sk-child\"></div>\n            <div className=\"sk-circle3 sk-child\"></div>\n            <div className=\"sk-circle4 sk-child\"></div>\n            <div className=\"sk-circle5 sk-child\"></div>\n            <div className=\"sk-circle6 sk-child\"></div>\n            <div className=\"sk-circle7 sk-child\"></div>\n            <div className=\"sk-circle8 sk-child\"></div>\n            <div className=\"sk-circle9 sk-child\"></div>\n            <div className=\"sk-circle10 sk-child\"></div>\n            <div className=\"sk-circle11 sk-child\"></div>\n            <div className=\"sk-circle12 sk-child\"></div>\n        </div>\n    );\n}\n \nexport default Spinner;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Resumen from './components/Resumen';\nimport Resultado from './components/Resultado';\nimport Spinner from './components/Spinner';\nimport styled from '@emotion/styled';\n\nconst Contenedor = styled.div`\n\tmax-width: 600px;\n\tmargin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n\tbackground-color: #FFFFFF;\n\tpadding: 3rem;\n`;\n\n\nfunction App() {\n\n\tconst [ resumen, guardarResumen ] = useState({\n\t\tcotizacion: 0,\n\t\tdatos: {\n\t\t\tmarca: '',\n\t\t\tyear: '',\n\t\t\tplan: ''\n\t\t}\n\t});\n\n\tconst [ cargando, actualizarCargando ] = useState(false);\n\n\t//etraer datos\n\tconst {cotizacion, datos} = resumen;\n\n\treturn (\n\t\t<Contenedor>\n\t\t\t<Header\n\t\t\t\ttitulo=\"Cotizador de Seguros\"\n\t\t\t/>\n\n\t\t\t<ContenedorFormulario>\n\t\t\t\t<Formulario \n\t\t\t\t\tguardarResumen={guardarResumen}\n\t\t\t\t\tactualizarCargando={actualizarCargando}\n\t\t\t\t/>\n\n\t\t\t\t{ cargando ? <Spinner />  : null }\n\t\t\t\t\n\n\t\t\t\t<Resumen \n\t\t\t\t\tdatos={datos}\n\t\t\t\t/>\n\t\t\t\t{ !cargando ? \n\t\t\t\t<Resultado\n\t\t\t\t\tcotizacion={cotizacion}\n\t\t\t\t/>\n\t\t\t\t: null }\n\t\t\t</ContenedorFormulario>\n\t\t</Contenedor>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}